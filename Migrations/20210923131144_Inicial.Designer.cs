// <auto-generated />
using System;
using Distribuidora_De_Bebidas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Distribuidora_De_Bebidas.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210923131144_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfAddressId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfId");

                    b.HasIndex("UserId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.TypeOf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.UserPf", b =>
                {
                    b.HasBaseType("Distribuidora_De_Bebidas.Models.User");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("UserPf");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.UserPj", b =>
                {
                    b.HasBaseType("Distribuidora_De_Bebidas.Models.User");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("UserPj");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.Address", b =>
                {
                    b.HasOne("Distribuidora_De_Bebidas.Models.TypeOf", "TypeOfAddress")
                        .WithMany("TypeOfAddresses")
                        .HasForeignKey("TypeOfAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Distribuidora_De_Bebidas.Models.User", "UserAddress")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfAddress");

                    b.Navigation("UserAddress");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.Phone", b =>
                {
                    b.HasOne("Distribuidora_De_Bebidas.Models.TypeOf", "TypeOfPhone")
                        .WithMany("TypeOfPhones")
                        .HasForeignKey("TypeOfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Distribuidora_De_Bebidas.Models.User", "PhoneUser")
                        .WithMany("Phones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneUser");

                    b.Navigation("TypeOfPhone");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.TypeOf", b =>
                {
                    b.Navigation("TypeOfAddresses");

                    b.Navigation("TypeOfPhones");
                });

            modelBuilder.Entity("Distribuidora_De_Bebidas.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
